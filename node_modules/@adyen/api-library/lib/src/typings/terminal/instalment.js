"use strict";
/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2020 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instalment = void 0;
/**
 * Terminal API
 * Definition of Terminal API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
class Instalment {
    static getAttributeTypeMap() {
        return Instalment.attributeTypeMap;
    }
}
exports.Instalment = Instalment;
Instalment.discriminator = undefined;
Instalment.attributeTypeMap = [
    {
        "name": "charges",
        "baseName": "Charges",
        "type": "number"
    },
    {
        "name": "cumulativeAmount",
        "baseName": "CumulativeAmount",
        "type": "number"
    },
    {
        "name": "firstAmount",
        "baseName": "FirstAmount",
        "type": "number"
    },
    {
        "name": "firstPaymentDate",
        "baseName": "FirstPaymentDate",
        "type": "string"
    },
    {
        "name": "instalmentType",
        "baseName": "InstalmentType",
        "type": "Array<Instalment.InstalmentTypeEnum>"
    },
    {
        "name": "period",
        "baseName": "Period",
        "type": "number"
    },
    {
        "name": "periodUnit",
        "baseName": "PeriodUnit",
        "type": "Instalment.PeriodUnitEnum"
    },
    {
        "name": "planID",
        "baseName": "PlanID",
        "type": "string"
    },
    {
        "name": "sequenceNumber",
        "baseName": "SequenceNumber",
        "type": "number"
    },
    {
        "name": "totalNbOfPayments",
        "baseName": "TotalNbOfPayments",
        "type": "number"
    }
];
(function (Instalment) {
    let InstalmentTypeEnum;
    (function (InstalmentTypeEnum) {
        InstalmentTypeEnum[InstalmentTypeEnum["DeferredInstalments"] = "DeferredInstalments"] = "DeferredInstalments";
        InstalmentTypeEnum[InstalmentTypeEnum["EqualInstalments"] = "EqualInstalments"] = "EqualInstalments";
        InstalmentTypeEnum[InstalmentTypeEnum["InequalInstalments"] = "InequalInstalments"] = "InequalInstalments";
    })(InstalmentTypeEnum = Instalment.InstalmentTypeEnum || (Instalment.InstalmentTypeEnum = {}));
    let PeriodUnitEnum;
    (function (PeriodUnitEnum) {
        PeriodUnitEnum[PeriodUnitEnum["Annual"] = "Annual"] = "Annual";
        PeriodUnitEnum[PeriodUnitEnum["Daily"] = "Daily"] = "Daily";
        PeriodUnitEnum[PeriodUnitEnum["Monthly"] = "Monthly"] = "Monthly";
        PeriodUnitEnum[PeriodUnitEnum["Weekly"] = "Weekly"] = "Weekly";
    })(PeriodUnitEnum = Instalment.PeriodUnitEnum || (Instalment.PeriodUnitEnum = {}));
})(Instalment = exports.Instalment || (exports.Instalment = {}));
//# sourceMappingURL=instalment.js.map